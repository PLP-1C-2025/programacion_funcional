Dejamos definido nuestro codigo:

foldDoc :: b -> (String -> b -> b) -> (Int -> b -> b) -> Doc -> b
foldDoc casoVacio casoTexto casoLinea doc = case doc of 
    Vacio -> casoVacio 
    Texto texto documentoRestante -> casoTexto texto (rec documentoRestante)
    Linea cantEspacios documentoRestante -> casoLinea cantEspacios (rec documentoRestante)
  where rec = foldDoc casoVacio casoTexto casoLinea

indentar :: Int -> Doc -> Doc
indentar i = foldDoc Vacio (\texto rec -> Texto texto rec) (\espacios rec -> Linea (espacios + i) rec)

Queremos demostrar que:

indentar n (indentar m d ) = indentar (n+m) d, para todo n, m :: Int y d ::Doc

Qvq: P(d) => P(x), x :: Doc

Definimos HI : indentar n (indentar m d) = indentar (n+m) d

Bpq: para todo x :: Doc, P(x), con P(x) = P(0) && P(1) && P(2)

Definimos los casos de P tal que:
P(0) para todo x :: Vacio
P(1) para todo x :: Texto s d, para todo s :: String, para todo d :: Doc
P(2) para todo x :: Linea k d, para todo k :: Int, para todo d :: Doc

Definimos los lemas dados, tal que:
L1 -> indentar k Vacio = Vacio, para todo k :: int
L2 -> indentar k (Texto s d ) = Texto s (indentar k d), para todo k :: int, para todo s:: String, para todo d :: Doc
L3 -> indentar m (Linea k d) = Linea (m+k) (indentar m d), para todo m, k :: Int y d :: Doc 

Pasamos a demostrar que vale P(0)
P(0) -> indentar n (indentar m Vacio) = indentar (n+m) Vacio
=> indentar n Vacio = Vacio {L1 * 2}
=> Vacio = Vacio {L1} ☑

Pasamos a demostrar que vale P(1)
P(1) -> indentar n (indentar m Texto s d) = indentar (n+m) Texto s d
=> indentar n Texto s (indentar m d) = Texto s (indentar (n+m) d) {L2 * 2}
=> Texto s (indentar n (indentar m d)) = Texto s (indentar (n+m) d) {L2}
=> Texto s (indentar (n+m) d) = Texto s (indentar (n+m) d) {H.I} ☑

Pasamos a demostrar que vale P(2)
P(2) -> indentar m (indentar m Linea k d) = indentar (n+m) Linea k d
=> indentar n linea (k+m) (indentar m d) = Linea (k+n+m) (indentar (n+m) d) {L3 * 2}
=> linea (k+m+n) (indentar n (indentar (m) d)) = Linea (k+n+m) (indentar (n+m) d) {L3}
=> Linea (k+n+m) (indentar (n+m) d) = Linea (k+n+m) (indentar (n+m) d) {HI} ☑
 
Si logramos demostrar L1, L2, L3, entonces nuestro P(x) es valido, y queda demostrado P(d) => P(x)

Pasamos a demostar los Lemas:

Aclaración para los Lemas L1 y L2: rec = foldDoc Vacio (\texto rec -> Texto texto rec) (\espacios rec -> Linea (espacios + i) rec) {Por def de foldDoc}

L1 -> indentar k Vacio = Vacio
=> foldDoc Vacio (\texto rec -> Texto texto rec) (\espacios rec -> Linea (espacios + k) rec) Vacio {Def indentar, Principio de extensionalidad}
=> Vacio {Por caso de Vacio}
=> Vacio = Vacio ☑


L2 -> indentar k (Texto s d) = Texto s (indentar k d)
=> foldDoc Vacio (\texto rec -> Texto texto rec) (\espacios rec -> Linea (espacios + k) rec) Texto s d {Def indentar, Principio de extensionalidad}
=> (\texto rec -> Texto texto rec) s (rec d) {Por caso de Texto}
=> (\texto rec -> Texto texto rec) s (indentar k d) {Def indentar}
=> Texto s (indentar k d) {por Eta}
=> Texto s (indentar k d) = Texto s (indentar k d) ☑


L3 -> indentar m (Linea k d) = Linea (m+k) (indentar m d)
=> foldDoc Vacio (\texto rec -> Texto texto rec) (\espacios rec -> Linea (espacios + m) rec) Linea k d {Def indentar, Principio de extensionalidad}
=> (\espacios rec -> Linea (espacios + m) rec) k rec d {Por caso de Linea}
=> (\espacios rec -> Linea (espacios + m) rec) k (indentar m d) {Def indentar} 
=> (\espacios -> Linea (espacios + m) (indentar m d)) k {Eta η}
=> Linea (k + m) (indentar m d) {Beta β} 
=> Linea (m + k) (indentar m d) {Por algebra de la suma}
=> Linea (m + k) (indentar m d) = Linea (m + k) (indentar m d) ☑

De esta forma quedan comprobados los Lemas, y por ende, P(d) => P(x) ☑